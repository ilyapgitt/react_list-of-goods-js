{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_LENGTH","SORT_BY_ALHPABET","App","useState","sortValue","setsortValue","reverseValue","setReverseValue","goodsForRender","arrayOfGoods","copyOfGoods","sort","goodA","goodB","localeCompare","length","reverse","getSortedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAEIC,EAAiB,SACjBC,EAAmB,QA0BZC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACMC,EA1Be,SAACC,EAAD,GAAgD,IAA/BL,EAA8B,EAA9BA,UAAWE,EAAmB,EAAnBA,aAC3CI,EAAW,YAAOD,GAmBxB,OAjBIL,GACFM,EAAYC,MAAK,SAACC,EAAOC,GACvB,OAAQT,GACN,KAAKH,EACH,OAAOW,EAAME,cAAcD,GAC7B,KAAKb,EACH,OAAOY,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAKXT,GACFI,EAAYM,UAGPN,EAMgBO,CAAelB,EACpC,CAAEK,YAAWE,iBAOf,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAAE,WAClChB,IAAcH,IACdoB,QAAS,kBAAMhB,EAAaJ,IAJ9B,iCASA,wBACEkB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CAAE,WACrChB,IAAcJ,IACdqB,QAAS,kBAAMhB,EAAaL,IAJ9B,4BASA,wBACEmB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CAAE,YAAad,IAClDe,QAAS,kBACLd,EADYD,EACI,GA7DV,YAyDZ,sBASEF,GAAaE,IACb,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAvCS,WACjBhB,EAAa,IACbE,EAAgB,KAkCV,sBAWJ,6BACGC,EAAec,KAAI,SAAAC,GAAI,OACtB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YChGnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.26d64bb4.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\nconst SORT_BY_LENGTH = 'length';\nconst SORT_BY_ALHPABET = 'alpha';\nconst SET_REVERSE = 'reverse';\n\nconst getSortedGoods = (arrayOfGoods, { sortValue, reverseValue }) => {\n  const copyOfGoods = [...arrayOfGoods];\n\n  if (sortValue) {\n    copyOfGoods.sort((goodA, goodB) => {\n      switch (sortValue) {\n        case SORT_BY_ALHPABET:\n          return goodA.localeCompare(goodB);\n        case SORT_BY_LENGTH:\n          return goodA.length - goodB.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverseValue) {\n    copyOfGoods.reverse();\n  }\n\n  return copyOfGoods;\n};\n\nexport const App = () => {\n  const [sortValue, setsortValue] = useState('');\n  const [reverseValue, setReverseValue] = useState('');\n  const goodsForRender = getSortedGoods(goodsFromServer,\n    { sortValue, reverseValue });\n\n  const resetButon = () => {\n    setsortValue('');\n    setReverseValue('');\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', { 'is-light':\n          sortValue !== SORT_BY_ALHPABET })}\n          onClick={() => setsortValue(SORT_BY_ALHPABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', { 'is-light':\n          sortValue !== SORT_BY_LENGTH })}\n          onClick={() => setsortValue(SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', { 'is-light': !reverseValue })}\n          onClick={() => (reverseValue\n            ? setReverseValue('')\n            : setReverseValue(SET_REVERSE))}\n        >\n          Reverse\n        </button>\n        {(sortValue || reverseValue) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetButon}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        {goodsForRender.map(good => (\n          <li key={good} data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}